{
  "numFailedTestSuites": 2,
  "numFailedTests": 19,
  "numPassedTestSuites": 15,
  "numPassedTests": 342,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 17,
  "numTotalTests": 361,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1749528569101,
  "success": false,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["useAnnouncement"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAnnouncement should initialize with no announcements when i18n is not ready",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize with no announcements when i18n is not ready"
        },
        {
          "ancestorTitles": ["useAnnouncement"],
          "duration": 2,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/hooks/useAnnouncement.test.tsx:71:35)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "useAnnouncement should show announcement when valid announcement exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should show announcement when valid announcement exists"
        },
        {
          "ancestorTitles": ["useAnnouncement"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAnnouncement should not show announcement if it was dismissed permanently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not show announcement if it was dismissed permanently"
        },
        {
          "ancestorTitles": ["useAnnouncement"],
          "duration": 1,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/hooks/useAnnouncement.test.tsx:105:35)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "useAnnouncement should show announcement if dismissal has expired",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should show announcement if dismissal has expired"
        },
        {
          "ancestorTitles": ["useAnnouncement"],
          "duration": 2,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/hooks/useAnnouncement.test.tsx:123:35)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "useAnnouncement should dismiss announcement without saving when dontShowAgain is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should dismiss announcement without saving when dontShowAgain is false"
        },
        {
          "ancestorTitles": ["useAnnouncement"],
          "duration": 1,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/hooks/useAnnouncement.test.tsx:137:35)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "useAnnouncement should dismiss announcement and save when dontShowAgain is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should dismiss announcement and save when dontShowAgain is true"
        },
        {
          "ancestorTitles": ["useAnnouncement"],
          "duration": 152,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/hooks/useAnnouncement.test.tsx:177:35)"
          ],
          "fullName": "useAnnouncement should reset all announcements",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should reset all announcements"
        },
        {
          "ancestorTitles": ["useAnnouncement"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAnnouncement should handle errors in scanning announcements gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors in scanning announcements gracefully"
        },
        {
          "ancestorTitles": ["useAnnouncement"],
          "duration": 2,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/hooks/useAnnouncement.test.tsx:229:35)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "useAnnouncement should ignore invalid announcement objects",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should ignore invalid announcement objects"
        },
        {
          "ancestorTitles": ["useAnnouncement"],
          "duration": 1,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/hooks/useAnnouncement.test.tsx:238:35)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "useAnnouncement should handle malformed dismissal data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle malformed dismissal data"
        },
        {
          "ancestorTitles": ["useAnnouncement"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAnnouncement should handle missing announcements section",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing announcements section"
        }
      ],
      "endTime": 1749528570247,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museAnnouncement › should show announcement when valid announcement exists\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 69 |\u001b[39m     \u001b[36mconst\u001b[39m { result } \u001b[33m=\u001b[39m renderHook(() \u001b[33m=>\u001b[39m useAnnouncement())\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 70 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 71 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39misOpen)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 72 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mcurrentAnnouncement)\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m 73 |\u001b[39m       id\u001b[33m:\u001b[39m \u001b[32m\"testAnnouncement\"\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 74 |\u001b[39m       title\u001b[33m:\u001b[39m \u001b[32m\"Test Title\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/hooks/useAnnouncement.test.tsx\u001b[39m\u001b[0m\u001b[2m:71:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museAnnouncement › should show announcement if dismissal has expired\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 103 |\u001b[39m     \u001b[36mconst\u001b[39m { result } \u001b[33m=\u001b[39m renderHook(() \u001b[33m=>\u001b[39m useAnnouncement())\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 104 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 105 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39misOpen)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 106 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mcurrentAnnouncement)\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m 107 |\u001b[39m       id\u001b[33m:\u001b[39m \u001b[32m\"testAnnouncement\"\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m       title\u001b[33m:\u001b[39m \u001b[32m\"Test Title\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/hooks/useAnnouncement.test.tsx\u001b[39m\u001b[0m\u001b[2m:105:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museAnnouncement › should dismiss announcement without saving when dontShowAgain is false\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 121 |\u001b[39m     \u001b[36mconst\u001b[39m { result } \u001b[33m=\u001b[39m renderHook(() \u001b[33m=>\u001b[39m useAnnouncement())\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 122 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 123 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39misOpen)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 124 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 125 |\u001b[39m     \u001b[36mawait\u001b[39m act(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 126 |\u001b[39m       result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mdismissAnnouncement(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/hooks/useAnnouncement.test.tsx\u001b[39m\u001b[0m\u001b[2m:123:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museAnnouncement › should dismiss announcement and save when dontShowAgain is true\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 135 |\u001b[39m     \u001b[36mconst\u001b[39m { result } \u001b[33m=\u001b[39m renderHook(() \u001b[33m=>\u001b[39m useAnnouncement())\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 136 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 137 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39misOpen)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 138 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 139 |\u001b[39m     \u001b[36mawait\u001b[39m act(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 140 |\u001b[39m       result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mdismissAnnouncement(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/hooks/useAnnouncement.test.tsx\u001b[39m\u001b[0m\u001b[2m:137:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museAnnouncement › should reset all announcements\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 175 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 176 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 177 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39misOpen)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 178 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mcurrentAnnouncement\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mid)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"testAnnouncement\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 179 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 180 |\u001b[39m     expect(localStorageMock\u001b[33m.\u001b[39mremoveItem)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/hooks/useAnnouncement.test.tsx\u001b[39m\u001b[0m\u001b[2m:177:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museAnnouncement › should ignore invalid announcement objects\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 227 |\u001b[39m     \u001b[36mconst\u001b[39m { result } \u001b[33m=\u001b[39m renderHook(() \u001b[33m=>\u001b[39m useAnnouncement())\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 228 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 229 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39misOpen)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 230 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mcurrentAnnouncement\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mid)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"validAnnouncement\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 231 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 232 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/hooks/useAnnouncement.test.tsx\u001b[39m\u001b[0m\u001b[2m:229:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museAnnouncement › should handle malformed dismissal data\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 236 |\u001b[39m     \u001b[36mconst\u001b[39m { result } \u001b[33m=\u001b[39m renderHook(() \u001b[33m=>\u001b[39m useAnnouncement())\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 237 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 238 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39misOpen)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 239 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mcurrentAnnouncement\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mid)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"testAnnouncement\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 240 |\u001b[39m     expect(localStorageMock\u001b[33m.\u001b[39mremoveItem)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[22m\n\u001b[2m     \u001b[90m 241 |\u001b[39m       \u001b[32m\"chabod-announcement-dismissed-testAnnouncement\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/hooks/useAnnouncement.test.tsx\u001b[39m\u001b[0m\u001b[2m:238:35)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/hooks/useAnnouncement.test.tsx",
      "startTime": 1749528569652,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AnnouncementDialog should not render when announcement is null",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not render when announcement is null"
        },
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AnnouncementDialog should not render when isOpen is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not render when isOpen is false"
        },
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 17,
          "failureDetails": [{ "name": "TestingLibraryElementError" }],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an accessible element with the role \"dialog\"\n\nThere are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div\u001b[39m\n      \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n    \u001b[36m/>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/config.js:37:19)\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx:56:19)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "AnnouncementDialog should render announcement dialog with all content",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should render announcement dialog with all content"
        },
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 3,
          "failureDetails": [{ "name": "TestingLibraryElementError" }],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an element with the text: common.dontShowAgain. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div\u001b[39m\n      \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n    \u001b[36m/>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/config.js:37:19)\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx:79:19)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "AnnouncementDialog should render with default text when custom text is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should render with default text when custom text is not provided"
        },
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 2,
          "failureDetails": [{ "name": "TestingLibraryElementError" }],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an element with the text: bold text. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div\u001b[39m\n      \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n    \u001b[36m/>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/config.js:37:19)\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx:97:19)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "AnnouncementDialog should render HTML content in message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should render HTML content in message"
        },
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 4,
          "failureDetails": [{ "name": "TestingLibraryElementError" }],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an accessible element with the role \"dialog\"\n\nThere are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div\u001b[39m\n      \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n    \u001b[36m/>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/config.js:37:19)\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n    at /Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx:115:21\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx:105:15)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "AnnouncementDialog should render different icon types",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should render different icon types"
        },
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 3,
          "failureDetails": [{ "name": "TestingLibraryElementError" }],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an accessible element with the role \"dialog\"\n\nThere are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div\u001b[39m\n      \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n    \u001b[36m/>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/config.js:37:19)\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx:132:27)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "AnnouncementDialog should call onDismiss with false when dialog is closed via overlay",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should call onDismiss with false when dialog is closed via overlay"
        },
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 3,
          "failureDetails": [{ "name": "TestingLibraryElementError" }],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an accessible element with the role \"button\" and name \"Got it\"\n\nThere are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div\u001b[39m\n      \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n    \u001b[36m/>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/config.js:37:19)\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx:149:37)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "AnnouncementDialog should call onDismiss with false when understood button is clicked without checkbox",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should call onDismiss with false when understood button is clicked without checkbox"
        },
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 6,
          "failureDetails": [{ "name": "TestingLibraryElementError" }],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an accessible element with the role \"checkbox\"\n\nThere are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div\u001b[39m\n      \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n    \u001b[36m/>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/config.js:37:19)\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx:166:29)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "AnnouncementDialog should call onDismiss with true when understood button is clicked with checkbox checked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should call onDismiss with true when understood button is clicked with checkbox checked"
        },
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 3,
          "failureDetails": [{ "name": "TestingLibraryElementError" }],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an accessible element with the role \"checkbox\"\n\nThere are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div\u001b[39m\n      \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n    \u001b[36m/>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/config.js:37:19)\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx:186:29)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "AnnouncementDialog should toggle checkbox state when clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should toggle checkbox state when clicked"
        },
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 2,
          "failureDetails": [{ "name": "TestingLibraryElementError" }],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an accessible element with the role \"checkbox\"\n\nThere are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div\u001b[39m\n      \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n    \u001b[36m/>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/config.js:37:19)\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx:208:29)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "AnnouncementDialog should reset checkbox state after dismissal",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should reset checkbox state after dismissal"
        },
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 2,
          "failureDetails": [{ "name": "TestingLibraryElementError" }],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an accessible element with the role \"dialog\"\n\nThere are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div\u001b[39m\n      \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n    \u001b[36m/>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/config.js:37:19)\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx:243:27)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "AnnouncementDialog should be accessible",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should be accessible"
        },
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 9,
          "failureDetails": [{ "name": "TestingLibraryElementError" }],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an accessible element with the role \"checkbox\"\n\nThere are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div\u001b[39m\n      \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n    \u001b[36m/>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/config.js:37:19)\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx:267:19)"
          ],
          "fullName": "AnnouncementDialog should handle keyboard navigation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle keyboard navigation"
        },
        {
          "ancestorTitles": ["AnnouncementDialog"],
          "duration": 2,
          "failureDetails": [{ "name": "TestingLibraryElementError" }],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an accessible element with the role \"checkbox\"\n\nThere are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div\u001b[39m\n      \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n    \u001b[36m/>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/config.js:37:19)\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n    at /Users/schwanndenkuo/Documents/personal/chabod/node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n    at Object.<anonymous> (/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx:289:29)\n    at Promise.then.completed (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/schwanndenkuo/Documents/personal/chabod/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "AnnouncementDialog should handle space key on checkbox",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle space key on checkbox"
        }
      ],
      "endTime": 1749528570260,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAnnouncementDialog › should render announcement dialog with all content\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an accessible element with the role \"dialog\"\n\n    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n        \u001b[36m/>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 54 |\u001b[39m     )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 56 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"dialog\"\u001b[39m))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByText(\u001b[32m\"Test Title\"\u001b[39m))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 58 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByText(\u001b[32m\"Test Message\"\u001b[39m))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 59 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByText(\u001b[32m\"Don't show this again\"\u001b[39m))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/components/shared/AnnouncementDialog.test.tsx\u001b[39m\u001b[0m\u001b[2m:56:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAnnouncementDialog › should render with default text when custom text is not provided\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an element with the text: common.dontShowAgain. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n        \u001b[36m/>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 77 |\u001b[39m     )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 78 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 79 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByText(\u001b[32m\"common.dontShowAgain\"\u001b[39m))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 80 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"button\"\u001b[39m\u001b[33m,\u001b[39m { name\u001b[33m:\u001b[39m \u001b[32m\"common.understood\"\u001b[39m }))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 81 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/components/shared/AnnouncementDialog.test.tsx\u001b[39m\u001b[0m\u001b[2m:79:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAnnouncementDialog › should render HTML content in message\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an element with the text: bold text. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n        \u001b[36m/>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  95 |\u001b[39m     )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  96 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  97 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByText(\u001b[32m\"bold text\"\u001b[39m))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  98 |\u001b[39m     \u001b[36mconst\u001b[39m strongElement \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByText(\u001b[32m\"bold text\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  99 |\u001b[39m     expect(strongElement\u001b[33m.\u001b[39mtagName)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"STRONG\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 100 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/components/shared/AnnouncementDialog.test.tsx\u001b[39m\u001b[0m\u001b[2m:97:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAnnouncementDialog › should render different icon types\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an accessible element with the role \"dialog\"\n\n    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n        \u001b[36m/>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 113 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 114 |\u001b[39m       \u001b[90m// Icon should be rendered (we can't easily test the specific icon due to mocking)\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 115 |\u001b[39m       expect(screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"dialog\"\u001b[39m))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m       unmount()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 117 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 118 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/components/shared/AnnouncementDialog.test.tsx\u001b[39m\u001b[0m\u001b[2m:115:21\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.forEach (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/components/shared/AnnouncementDialog.test.tsx\u001b[39m\u001b[0m\u001b[2m:105:15)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAnnouncementDialog › should call onDismiss with false when dialog is closed via overlay\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an accessible element with the role \"dialog\"\n\n    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n        \u001b[36m/>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 130 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 131 |\u001b[39m     \u001b[90m// Click outside the dialog (on the overlay)\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 132 |\u001b[39m     \u001b[36mconst\u001b[39m dialog \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"dialog\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 133 |\u001b[39m     \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mclick(dialog\u001b[33m.\u001b[39mparentElement\u001b[33m!\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 134 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 135 |\u001b[39m     expect(mockOnDismiss)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/components/shared/AnnouncementDialog.test.tsx\u001b[39m\u001b[0m\u001b[2m:132:27)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAnnouncementDialog › should call onDismiss with false when understood button is clicked without checkbox\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an accessible element with the role \"button\" and name \"Got it\"\n\n    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n        \u001b[36m/>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 147 |\u001b[39m     )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 148 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 149 |\u001b[39m     \u001b[36mconst\u001b[39m understoodButton \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"button\"\u001b[39m\u001b[33m,\u001b[39m { name\u001b[33m:\u001b[39m \u001b[32m\"Got it\"\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 150 |\u001b[39m     \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mclick(understoodButton)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 151 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 152 |\u001b[39m     expect(mockOnDismiss)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/components/shared/AnnouncementDialog.test.tsx\u001b[39m\u001b[0m\u001b[2m:149:37)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAnnouncementDialog › should call onDismiss with true when understood button is clicked with checkbox checked\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an accessible element with the role \"checkbox\"\n\n    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n        \u001b[36m/>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 164 |\u001b[39m     )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 165 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 166 |\u001b[39m     \u001b[36mconst\u001b[39m checkbox \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"checkbox\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 167 |\u001b[39m     \u001b[36mconst\u001b[39m understoodButton \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"button\"\u001b[39m\u001b[33m,\u001b[39m { name\u001b[33m:\u001b[39m \u001b[32m\"Got it\"\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 168 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 169 |\u001b[39m     \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mclick(checkbox)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/components/shared/AnnouncementDialog.test.tsx\u001b[39m\u001b[0m\u001b[2m:166:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAnnouncementDialog › should toggle checkbox state when clicked\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an accessible element with the role \"checkbox\"\n\n    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n        \u001b[36m/>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 184 |\u001b[39m     )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 185 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 186 |\u001b[39m     \u001b[36mconst\u001b[39m checkbox \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"checkbox\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 187 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 188 |\u001b[39m     expect(checkbox)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBeChecked()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 189 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/components/shared/AnnouncementDialog.test.tsx\u001b[39m\u001b[0m\u001b[2m:186:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAnnouncementDialog › should reset checkbox state after dismissal\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an accessible element with the role \"checkbox\"\n\n    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n        \u001b[36m/>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 206 |\u001b[39m     )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 207 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 208 |\u001b[39m     \u001b[36mconst\u001b[39m checkbox \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"checkbox\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 209 |\u001b[39m     \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mclick(checkbox)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 210 |\u001b[39m     expect(checkbox)\u001b[33m.\u001b[39mtoBeChecked()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 211 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/components/shared/AnnouncementDialog.test.tsx\u001b[39m\u001b[0m\u001b[2m:208:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAnnouncementDialog › should be accessible\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an accessible element with the role \"dialog\"\n\n    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n        \u001b[36m/>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 241 |\u001b[39m     )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 242 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 243 |\u001b[39m     \u001b[36mconst\u001b[39m dialog \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"dialog\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 244 |\u001b[39m     expect(dialog)\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 245 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 246 |\u001b[39m     \u001b[36mconst\u001b[39m checkbox \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"checkbox\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/components/shared/AnnouncementDialog.test.tsx\u001b[39m\u001b[0m\u001b[2m:243:27)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAnnouncementDialog › should handle keyboard navigation\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an accessible element with the role \"checkbox\"\n\n    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n        \u001b[36m/>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 265 |\u001b[39m     \u001b[90m// Tab to checkbox\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 266 |\u001b[39m     \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mtab()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 267 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"checkbox\"\u001b[39m))\u001b[33m.\u001b[39mtoHaveFocus()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 268 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 269 |\u001b[39m     \u001b[90m// Tab to button\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 270 |\u001b[39m     \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mtab()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/components/shared/AnnouncementDialog.test.tsx\u001b[39m\u001b[0m\u001b[2m:267:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAnnouncementDialog › should handle space key on checkbox\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an accessible element with the role \"checkbox\"\n\n    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"announcement-dialog\"\u001b[39m\n        \u001b[36m/>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 287 |\u001b[39m     )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 288 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 289 |\u001b[39m     \u001b[36mconst\u001b[39m checkbox \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"checkbox\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 290 |\u001b[39m     \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mclick(checkbox)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 291 |\u001b[39m     \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mkeyboard(\u001b[32m\" \"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 292 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/ui/components/shared/AnnouncementDialog.test.tsx\u001b[39m\u001b[0m\u001b[2m:289:29)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/shared/AnnouncementDialog.test.tsx",
      "startTime": 1749528569662,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ServicePage", "Authentication and Navigation"],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Authentication and Navigation should redirect to auth page when user is not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to auth page when user is not authenticated"
        },
        {
          "ancestorTitles": ["ServicePage", "Authentication and Navigation"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Authentication and Navigation should not redirect when session is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not redirect when session is loading"
        },
        {
          "ancestorTitles": ["ServicePage", "Authentication and Navigation"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Authentication and Navigation should not redirect when user is authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not redirect when user is authenticated"
        },
        {
          "ancestorTitles": ["ServicePage", "Rendering"],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Rendering should render correctly with required data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should render correctly with required data"
        },
        {
          "ancestorTitles": ["ServicePage", "Rendering"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Rendering should show loading state initially",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state initially"
        },
        {
          "ancestorTitles": ["ServicePage", "Rendering"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Rendering should display breadcrumb correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should display breadcrumb correctly"
        },
        {
          "ancestorTitles": ["ServicePage", "Service Management Authorization"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Service Management Authorization should show create service dialog when user is tenant owner",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show create service dialog when user is tenant owner"
        },
        {
          "ancestorTitles": ["ServicePage", "Service Management Authorization"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Service Management Authorization should not show create service dialog when user is not tenant owner",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not show create service dialog when user is not tenant owner"
        },
        {
          "ancestorTitles": ["ServicePage", "Service Management Authorization"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Service Management Authorization should not show create service dialog when role is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not show create service dialog when role is loading"
        },
        {
          "ancestorTitles": ["ServicePage", "Service Display"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Service Display should display services when available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should display services when available"
        },
        {
          "ancestorTitles": ["ServicePage", "Service Display"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Service Display should show no services message when no services exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show no services message when no services exist"
        },
        {
          "ancestorTitles": ["ServicePage", "Service Display"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Service Display should show loading message while services are loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading message while services are loading"
        },
        {
          "ancestorTitles": ["ServicePage", "Service Editing"],
          "duration": 35,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Service Editing should open edit dialog when service edit is triggered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should open edit dialog when service edit is triggered"
        },
        {
          "ancestorTitles": ["ServicePage", "Service Editing"],
          "duration": 33,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Service Editing should close edit dialog when dialog close is triggered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should close edit dialog when dialog close is triggered"
        },
        {
          "ancestorTitles": ["ServicePage", "Service Editing"],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Service Editing should refresh services when edit dialog success is triggered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should refresh services when edit dialog success is triggered"
        },
        {
          "ancestorTitles": ["ServicePage", "Service Creation"],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Service Creation should refresh services when create dialog success is triggered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should refresh services when create dialog success is triggered"
        },
        {
          "ancestorTitles": ["ServicePage", "Service Deletion"],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Service Deletion should refresh services when service deletion is triggered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should refresh services when service deletion is triggered"
        },
        {
          "ancestorTitles": ["ServicePage", "Error Handling"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Error Handling should handle tenant loading error gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle tenant loading error gracefully"
        },
        {
          "ancestorTitles": ["ServicePage", "Error Handling"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Error Handling should handle services loading error gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle services loading error gracefully"
        },
        {
          "ancestorTitles": ["ServicePage", "Error Handling"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Error Handling should handle missing slug parameter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing slug parameter"
        },
        {
          "ancestorTitles": ["ServicePage", "Error Handling"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Error Handling should handle missing tenant ID for services fetch",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing tenant ID for services fetch"
        },
        {
          "ancestorTitles": ["ServicePage", "Query Dependencies"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Query Dependencies should not fetch tenant when slug is missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not fetch tenant when slug is missing"
        },
        {
          "ancestorTitles": ["ServicePage", "Query Dependencies"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Query Dependencies should not fetch services when tenant ID is not available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not fetch services when tenant ID is not available"
        },
        {
          "ancestorTitles": ["ServicePage", "Query Dependencies"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Query Dependencies should fetch services when tenant is available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch services when tenant is available"
        },
        {
          "ancestorTitles": ["ServicePage", "User Role Integration"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage User Role Integration should pass correct parameters to useTenantRole hook",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass correct parameters to useTenantRole hook"
        },
        {
          "ancestorTitles": ["ServicePage", "User Role Integration"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage User Role Integration should handle missing user ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing user ID"
        },
        {
          "ancestorTitles": ["ServicePage", "Loading States"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Loading States should show loading when session is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading when session is loading"
        },
        {
          "ancestorTitles": ["ServicePage", "Loading States"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Loading States should show loading when tenant is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading when tenant is loading"
        },
        {
          "ancestorTitles": ["ServicePage", "Loading States"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Loading States should show loading when services are loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading when services are loading"
        },
        {
          "ancestorTitles": ["ServicePage", "Loading States"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServicePage Loading States should not show loading when all data is loaded",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not show loading when all data is loaded"
        }
      ],
      "endTime": 1749528570465,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/pages/tenant/ServicePage.test.tsx",
      "startTime": 1749528569687,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["MembersPage", "Authentication and Navigation"],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Authentication and Navigation should redirect to auth page when user is not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to auth page when user is not authenticated"
        },
        {
          "ancestorTitles": ["MembersPage", "Authentication and Navigation"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Authentication and Navigation should not redirect when session is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not redirect when session is loading"
        },
        {
          "ancestorTitles": ["MembersPage", "Authentication and Navigation"],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Authentication and Navigation should not redirect when user is authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not redirect when user is authenticated"
        },
        {
          "ancestorTitles": ["MembersPage", "Authentication and Navigation"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Authentication and Navigation should redirect to tenant page when current user is not a member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to tenant page when current user is not a member"
        },
        {
          "ancestorTitles": ["MembersPage", "Authentication and Navigation"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Authentication and Navigation should redirect to not-found when tenant does not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to not-found when tenant does not exist"
        },
        {
          "ancestorTitles": ["MembersPage", "Rendering"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Rendering should show loading state while session is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state while session is loading"
        },
        {
          "ancestorTitles": ["MembersPage", "Rendering"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Rendering should show loading state while data is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state while data is loading"
        },
        {
          "ancestorTitles": ["MembersPage", "Rendering"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Rendering should render the page layout with correct props",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should render the page layout with correct props"
        },
        {
          "ancestorTitles": ["MembersPage", "Rendering"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Rendering should render member filter bar",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render member filter bar"
        },
        {
          "ancestorTitles": ["MembersPage", "Rendering"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Rendering should render member table with correct props",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should render member table with correct props"
        },
        {
          "ancestorTitles": ["MembersPage", "Rendering"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Rendering should show invite button for owners",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show invite button for owners"
        },
        {
          "ancestorTitles": ["MembersPage", "Rendering"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Rendering should not show invite button for non-owners",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not show invite button for non-owners"
        },
        {
          "ancestorTitles": ["MembersPage", "Rendering"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Rendering should show tenant not found when tenant is null after loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should show tenant not found when tenant is null after loading"
        },
        {
          "ancestorTitles": ["MembersPage", "Member Filtering"],
          "duration": 47,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Member Filtering should filter members by name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter members by name"
        },
        {
          "ancestorTitles": ["MembersPage", "Member Filtering"],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Member Filtering should filter members by email",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter members by email"
        },
        {
          "ancestorTitles": ["MembersPage", "Member Filtering"],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Member Filtering should filter members by role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter members by role"
        },
        {
          "ancestorTitles": ["MembersPage", "Member Management"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Member Management should open invite dialog when invite button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should open invite dialog when invite button is clicked"
        },
        {
          "ancestorTitles": ["MembersPage", "Member Management"],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Member Management should close invite dialog when close is triggered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should close invite dialog when close is triggered"
        },
        {
          "ancestorTitles": ["MembersPage", "Member Management"],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Member Management should refresh member list when invite is successful",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should refresh member list when invite is successful"
        },
        {
          "ancestorTitles": ["MembersPage", "Member Management"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Member Management should refresh member list when member is updated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should refresh member list when member is updated"
        },
        {
          "ancestorTitles": ["MembersPage", "Error Handling"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Error Handling should handle tenant fetch error gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle tenant fetch error gracefully"
        },
        {
          "ancestorTitles": ["MembersPage", "Error Handling"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Error Handling should handle member fetch error gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle member fetch error gracefully"
        },
        {
          "ancestorTitles": ["MembersPage", "Error Handling"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Error Handling should handle missing slug parameter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing slug parameter"
        },
        {
          "ancestorTitles": ["MembersPage", "Data Loading"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Data Loading should fetch tenant and members data on mount",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch tenant and members data on mount"
        },
        {
          "ancestorTitles": ["MembersPage", "Data Loading"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Data Loading should determine if current user is owner correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should determine if current user is owner correctly"
        },
        {
          "ancestorTitles": ["MembersPage", "Data Loading"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Data Loading should determine if current user is not owner correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should determine if current user is not owner correctly"
        },
        {
          "ancestorTitles": ["MembersPage", "Data Loading"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Data Loading should not fetch data when user is not available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not fetch data when user is not available"
        },
        {
          "ancestorTitles": ["MembersPage", "Return to Home Button"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Return to Home Button should navigate to home when return button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate to home when return button is clicked"
        },
        {
          "ancestorTitles": ["MembersPage", "Accessibility"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Accessibility should render proper heading structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render proper heading structure"
        },
        {
          "ancestorTitles": ["MembersPage", "Accessibility"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MembersPage Accessibility should render button with proper accessibility",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should render button with proper accessibility"
        }
      ],
      "endTime": 1749528570503,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/pages/tenant/MembersPage.test.tsx",
      "startTime": 1749528569687,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["DashboardPage", "Authentication and Loading"],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Authentication and Loading should show loading state when session is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state when session is loading"
        },
        {
          "ancestorTitles": ["DashboardPage", "Authentication and Loading"],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Authentication and Loading should redirect to auth when user is not logged in",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to auth when user is not logged in"
        },
        {
          "ancestorTitles": ["DashboardPage", "Tenant List Display"],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Tenant List Display should display tenant list when tenants exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should display tenant list when tenants exist"
        },
        {
          "ancestorTitles": ["DashboardPage", "Tenant List Display"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Tenant List Display should show empty state when no tenants exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show empty state when no tenants exist"
        },
        {
          "ancestorTitles": ["DashboardPage", "Tenant List Display"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Tenant List Display should show loading state while fetching tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state while fetching tenants"
        },
        {
          "ancestorTitles": ["DashboardPage", "Tenant List Display"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Tenant List Display should handle tenant fetching errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle tenant fetching errors gracefully"
        },
        {
          "ancestorTitles": ["DashboardPage", "Tenant Creation"],
          "duration": 61,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Tenant Creation should open create dialog when add button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should open create dialog when add button is clicked"
        },
        {
          "ancestorTitles": ["DashboardPage", "Tenant Creation"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Tenant Creation should have add button visible in empty state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should have add button visible in empty state"
        },
        {
          "ancestorTitles": ["DashboardPage", "Tenant Management"],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Tenant Management should refresh tenant list after tenant changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should refresh tenant list after tenant changes"
        },
        {
          "ancestorTitles": ["DashboardPage", "Component Structure"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Component Structure should render navigation bar",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should render navigation bar"
        },
        {
          "ancestorTitles": ["DashboardPage", "Component Structure"],
          "duration": 28,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Component Structure should have proper page structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should have proper page structure"
        },
        {
          "ancestorTitles": ["DashboardPage", "User Experience"],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage User Experience should show proper loading messages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show proper loading messages"
        },
        {
          "ancestorTitles": ["DashboardPage", "User Experience"],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage User Experience should display tenant grid layout when tenants exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should display tenant grid layout when tenants exist"
        },
        {
          "ancestorTitles": ["DashboardPage", "Edge Cases"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Edge Cases should handle missing user gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing user gracefully"
        },
        {
          "ancestorTitles": ["DashboardPage", "Edge Cases"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Edge Cases should not fetch tenants when user is not available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not fetch tenants when user is not available"
        },
        {
          "ancestorTitles": ["DashboardPage", "Edge Cases"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Edge Cases should handle rapid user state changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle rapid user state changes"
        },
        {
          "ancestorTitles": ["DashboardPage", "Tenant Ownership Functionality"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Tenant Ownership Functionality should show edit buttons for tenants where user is owner",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should show edit buttons for tenants where user is owner"
        },
        {
          "ancestorTitles": ["DashboardPage", "Tenant Ownership Functionality"],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Tenant Ownership Functionality should show no edit buttons when user is not owner of any tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should show no edit buttons when user is not owner of any tenants"
        },
        {
          "ancestorTitles": ["DashboardPage", "Tenant Ownership Functionality"],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Tenant Ownership Functionality should show all edit buttons when user is owner of all tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should show all edit buttons when user is owner of all tenants"
        },
        {
          "ancestorTitles": ["DashboardPage", "Tenant Ownership Functionality"],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Tenant Ownership Functionality should handle null userRole gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle null userRole gracefully"
        },
        {
          "ancestorTitles": ["DashboardPage", "Loading and Error States"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Loading and Error States should show loading state initially",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state initially"
        },
        {
          "ancestorTitles": ["DashboardPage", "Loading and Error States"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage Loading and Error States should handle empty tenant list",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle empty tenant list"
        },
        {
          "ancestorTitles": ["DashboardPage", "User Interactions"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DashboardPage User Interactions should open create dialog when add church button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should open create dialog when add church button is clicked"
        }
      ],
      "endTime": 1749528570511,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/pages/DashboardPage.test.tsx",
      "startTime": 1749528569673,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["AuthTabs", "Initial Tab Selection"],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Initial Tab Selection should default to signin tab when no initialTab is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should default to signin tab when no initialTab is provided"
        },
        {
          "ancestorTitles": ["AuthTabs", "Initial Tab Selection"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Initial Tab Selection should use signin tab when initialTab is explicitly set to signin",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should use signin tab when initialTab is explicitly set to signin"
        },
        {
          "ancestorTitles": ["AuthTabs", "Initial Tab Selection"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Initial Tab Selection should use signup tab when initialTab is set to signup",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should use signup tab when initialTab is set to signup"
        },
        {
          "ancestorTitles": ["AuthTabs", "Tab Switching via User Interaction"],
          "duration": 28,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Tab Switching via User Interaction should switch to signup tab when user clicks signup trigger",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should switch to signup tab when user clicks signup trigger"
        },
        {
          "ancestorTitles": ["AuthTabs", "Tab Switching via User Interaction"],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Tab Switching via User Interaction should switch to signin tab when user clicks signin trigger",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should switch to signin tab when user clicks signin trigger"
        },
        {
          "ancestorTitles": ["AuthTabs", "Tab Switching via Form Actions"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Tab Switching via Form Actions should switch to signup when signin form triggers signup",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should switch to signup when signin form triggers signup"
        },
        {
          "ancestorTitles": ["AuthTabs", "Tab Switching via Form Actions"],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Tab Switching via Form Actions should switch to signin when signup form triggers signin",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should switch to signin when signup form triggers signin"
        },
        {
          "ancestorTitles": ["AuthTabs", "Prop Changes (Critical for Navbar Navigation Bug Fix)"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Prop Changes (Critical for Navbar Navigation Bug Fix) should update active tab when initialTab prop changes from signin to signup",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should update active tab when initialTab prop changes from signin to signup"
        },
        {
          "ancestorTitles": ["AuthTabs", "Prop Changes (Critical for Navbar Navigation Bug Fix)"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Prop Changes (Critical for Navbar Navigation Bug Fix) should update active tab when initialTab prop changes from signup to signin",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should update active tab when initialTab prop changes from signup to signin"
        },
        {
          "ancestorTitles": ["AuthTabs", "Prop Changes (Critical for Navbar Navigation Bug Fix)"],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Prop Changes (Critical for Navbar Navigation Bug Fix) should handle multiple prop changes correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle multiple prop changes correctly"
        },
        {
          "ancestorTitles": ["AuthTabs", "Props Forwarding"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Props Forwarding should forward tenant props to form components",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should forward tenant props to form components"
        },
        {
          "ancestorTitles": ["AuthTabs", "Props Forwarding"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Props Forwarding should call onSuccess when forms trigger success",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call onSuccess when forms trigger success"
        },
        {
          "ancestorTitles": ["AuthTabs", "Accessibility"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Accessibility should have proper tab structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should have proper tab structure"
        },
        {
          "ancestorTitles": ["AuthTabs", "Accessibility"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthTabs Accessibility should have correct tab panel",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have correct tab panel"
        }
      ],
      "endTime": 1749528570531,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/Auth/AuthTabs.test.tsx",
      "startTime": 1749528570269,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["GroupMembersPage", "Authentication and Navigation"],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Authentication and Navigation should redirect to auth page when user is not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to auth page when user is not authenticated"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Authentication and Navigation"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Authentication and Navigation should not redirect when session is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not redirect when session is loading"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Authentication and Navigation"],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Authentication and Navigation should not redirect when user is authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not redirect when user is authenticated"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Data Loading and Error Handling"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Data Loading and Error Handling should show loading state while fetching data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state while fetching data"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Data Loading and Error Handling"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Data Loading and Error Handling should navigate to not-found when tenant doesn't exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate to not-found when tenant doesn't exist"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Data Loading and Error Handling"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Data Loading and Error Handling should navigate back to tenant when group doesn't exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate back to tenant when group doesn't exist"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Data Loading and Error Handling"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Data Loading and Error Handling should handle data fetching errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle data fetching errors"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Data Display"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Data Display should display group members correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should display group members correctly"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Data Display"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Data Display should display breadcrumbs correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should display breadcrumbs correctly"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Data Display"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Data Display should show back to groups button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show back to groups button"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Data Display"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Data Display should show add member button for tenant owners",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show add member button for tenant owners"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Data Display"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Data Display should not show add member button for non-owners",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not show add member button for non-owners"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Data Display"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Data Display should show empty state when no members",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show empty state when no members"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Data Display"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Data Display should show unknown for members without profile name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show unknown for members without profile name"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Member Management"],
          "duration": 36,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Member Management should open add member dialog when button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should open add member dialog when button is clicked"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Member Management"],
          "duration": 57,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Member Management should add member successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should add member successfully"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Member Management"],
          "duration": 52,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Member Management should handle add member failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle add member failure"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Member Management"],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Member Management should remove member successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove member successfully"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Member Management"],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Member Management should handle remove member failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle remove member failure"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Member Management"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Member Management should disable add member button when no available members",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should disable add member button when no available members"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Navigation Actions"],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Navigation Actions should navigate back to groups when back button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate back to groups when back button is clicked"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Loading States"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Loading States should show session loading state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show session loading state"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Loading States"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Loading States should show data loading state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show data loading state"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Edge Cases"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Edge Cases should handle missing slug parameter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing slug parameter"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Edge Cases"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Edge Cases should handle missing groupId parameter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing groupId parameter"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Edge Cases"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Edge Cases should not fetch data when user is null",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not fetch data when user is null"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Edge Cases"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Edge Cases should handle rapid state changes during data loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle rapid state changes during data loading"
        },
        {
          "ancestorTitles": ["GroupMembersPage", "Edge Cases"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupMembersPage Edge Cases should handle members with null profile",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle members with null profile"
        }
      ],
      "endTime": 1749528570531,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/pages/tenant/GroupMembersPage.test.tsx",
      "startTime": 1749528569687,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["NavBar", "Rendering"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Rendering should render with unauthenticated user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should render with unauthenticated user"
        },
        {
          "ancestorTitles": ["NavBar", "Rendering"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Rendering should render with authenticated user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should render with authenticated user"
        },
        {
          "ancestorTitles": ["NavBar", "Logo Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Logo Navigation Behavior should link to '/' when on root path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to '/' when on root path"
        },
        {
          "ancestorTitles": ["NavBar", "Logo Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Logo Navigation Behavior should link to '/' when on dashboard path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to '/' when on dashboard path"
        },
        {
          "ancestorTitles": ["NavBar", "Logo Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Logo Navigation Behavior should link to '/dashboard' when on profile path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to '/dashboard' when on profile path"
        },
        {
          "ancestorTitles": ["NavBar", "Logo Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Logo Navigation Behavior should link to tenant dashboard when on tenant root path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to tenant dashboard when on tenant root path"
        },
        {
          "ancestorTitles": ["NavBar", "Logo Navigation Behavior"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Logo Navigation Behavior should link to tenant dashboard when on tenant members path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to tenant dashboard when on tenant members path"
        },
        {
          "ancestorTitles": ["NavBar", "Logo Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Logo Navigation Behavior should link to tenant dashboard when on tenant profile path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to tenant dashboard when on tenant profile path"
        },
        {
          "ancestorTitles": ["NavBar", "Logo Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Logo Navigation Behavior should link to tenant dashboard when on nested tenant path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to tenant dashboard when on nested tenant path"
        },
        {
          "ancestorTitles": ["NavBar", "Logo Navigation Behavior"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Logo Navigation Behavior should handle complex tenant slugs with hyphens",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle complex tenant slugs with hyphens"
        },
        {
          "ancestorTitles": ["NavBar", "Logo Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Logo Navigation Behavior should link to '/' for unknown paths",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to '/' for unknown paths"
        },
        {
          "ancestorTitles": ["NavBar", "User Authentication Actions"],
          "duration": 29,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar User Authentication Actions should handle sign out successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle sign out successfully"
        },
        {
          "ancestorTitles": ["NavBar", "User Authentication Actions"],
          "duration": 33,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar User Authentication Actions should handle sign out error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle sign out error"
        },
        {
          "ancestorTitles": ["NavBar", "Navigation Links"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Navigation Links should render correct login link with redirect when not on root",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render correct login link with redirect when not on root"
        },
        {
          "ancestorTitles": ["NavBar", "Navigation Links"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Navigation Links should render login link without redirect when on root",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render login link without redirect when on root"
        },
        {
          "ancestorTitles": ["NavBar", "Navigation Links"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Navigation Links should render login link without redirect when already on auth page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render login link without redirect when already on auth page"
        },
        {
          "ancestorTitles": ["NavBar", "Navigation Links"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Navigation Links should render login link without redirect when on auth page with query params",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render login link without redirect when on auth page with query params"
        },
        {
          "ancestorTitles": ["NavBar", "Navigation Links"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Navigation Links should render signup link",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render signup link"
        },
        {
          "ancestorTitles": ["NavBar", "Navigation Links"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Navigation Links should render signup link when already on auth page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render signup link when already on auth page"
        },
        {
          "ancestorTitles": ["NavBar", "Navigation Links"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Navigation Links should render dashboard and profile links when authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should render dashboard and profile links when authenticated"
        },
        {
          "ancestorTitles": ["NavBar", "Accessibility"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Accessibility should have proper navigation landmark",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have proper navigation landmark"
        },
        {
          "ancestorTitles": ["NavBar", "Accessibility"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Accessibility should have clickable logo link",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have clickable logo link"
        },
        {
          "ancestorTitles": ["NavBar", "Accessibility"],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Accessibility should have accessible buttons and links",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should have accessible buttons and links"
        },
        {
          "ancestorTitles": ["NavBar", "Profile Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Profile Navigation Behavior should link to '/profile' when on root path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to '/profile' when on root path"
        },
        {
          "ancestorTitles": ["NavBar", "Profile Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Profile Navigation Behavior should link to '/profile' when on dashboard path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to '/profile' when on dashboard path"
        },
        {
          "ancestorTitles": ["NavBar", "Profile Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Profile Navigation Behavior should link to '/profile' when on profile path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to '/profile' when on profile path"
        },
        {
          "ancestorTitles": ["NavBar", "Profile Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Profile Navigation Behavior should link to tenant profile when on tenant root path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to tenant profile when on tenant root path"
        },
        {
          "ancestorTitles": ["NavBar", "Profile Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Profile Navigation Behavior should link to tenant profile when on tenant members path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to tenant profile when on tenant members path"
        },
        {
          "ancestorTitles": ["NavBar", "Profile Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Profile Navigation Behavior should link to tenant profile when on tenant profile path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to tenant profile when on tenant profile path"
        },
        {
          "ancestorTitles": ["NavBar", "Profile Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Profile Navigation Behavior should link to tenant profile when on nested tenant path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to tenant profile when on nested tenant path"
        },
        {
          "ancestorTitles": ["NavBar", "Profile Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Profile Navigation Behavior should handle different tenant slugs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle different tenant slugs"
        },
        {
          "ancestorTitles": ["NavBar", "Profile Navigation Behavior"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Profile Navigation Behavior should link to '/profile' for unknown paths",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should link to '/profile' for unknown paths"
        },
        {
          "ancestorTitles": ["NavBar", "Profile Navigation Behavior"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Profile Navigation Behavior should handle malformed tenant paths",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle malformed tenant paths"
        },
        {
          "ancestorTitles": ["NavBar", "Complete Route Navigation Specification"],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Complete Route Navigation Specification should follow the complete navigation specification for all route scenarios",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 15,
          "retryReasons": [],
          "status": "passed",
          "title": "should follow the complete navigation specification for all route scenarios"
        },
        {
          "ancestorTitles": ["NavBar", "Complete Route Navigation Specification"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Complete Route Navigation Specification should handle edge cases for tenant paths",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle edge cases for tenant paths"
        },
        {
          "ancestorTitles": ["NavBar", "Complete Route Navigation Specification"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar Complete Route Navigation Specification should handle malformed or invalid tenant paths",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle malformed or invalid tenant paths"
        }
      ],
      "endTime": 1749528570546,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/Layout/NavBar.test.tsx",
      "startTime": 1749528570257,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["GroupsPage", "Authentication and Navigation"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Authentication and Navigation should redirect to auth page when user is not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to auth page when user is not authenticated"
        },
        {
          "ancestorTitles": ["GroupsPage", "Authentication and Navigation"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Authentication and Navigation should not redirect when session is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not redirect when session is loading"
        },
        {
          "ancestorTitles": ["GroupsPage", "Authentication and Navigation"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Authentication and Navigation should not redirect when user is authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not redirect when user is authenticated"
        },
        {
          "ancestorTitles": ["GroupsPage", "Tenant Loading and Error Handling"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Tenant Loading and Error Handling should show loading state while fetching tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state while fetching tenant"
        },
        {
          "ancestorTitles": ["GroupsPage", "Tenant Loading and Error Handling"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Tenant Loading and Error Handling should navigate to not-found when tenant doesn't exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate to not-found when tenant doesn't exist"
        },
        {
          "ancestorTitles": ["GroupsPage", "Tenant Loading and Error Handling"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Tenant Loading and Error Handling should handle tenant fetching errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle tenant fetching errors"
        },
        {
          "ancestorTitles": ["GroupsPage", "Data Fetching and Display"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Data Fetching and Display should fetch and display tenant and groups data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch and display tenant and groups data"
        },
        {
          "ancestorTitles": ["GroupsPage", "Data Fetching and Display"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Data Fetching and Display should pass correct owner status to GroupTable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass correct owner status to GroupTable"
        },
        {
          "ancestorTitles": ["GroupsPage", "Data Fetching and Display"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Data Fetching and Display should pass non-owner status to GroupTable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass non-owner status to GroupTable"
        },
        {
          "ancestorTitles": ["GroupsPage", "Data Fetching and Display"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Data Fetching and Display should display breadcrumb items correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should display breadcrumb items correctly"
        },
        {
          "ancestorTitles": ["GroupsPage", "Group Management Callbacks"],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Group Management Callbacks should refresh groups when group is created",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should refresh groups when group is created"
        },
        {
          "ancestorTitles": ["GroupsPage", "Group Management Callbacks"],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Group Management Callbacks should refresh groups when group is updated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should refresh groups when group is updated"
        },
        {
          "ancestorTitles": ["GroupsPage", "Group Management Callbacks"],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Group Management Callbacks should refresh groups when group is deleted",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should refresh groups when group is deleted"
        },
        {
          "ancestorTitles": ["GroupsPage", "Loading States"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Loading States should show session loading state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show session loading state"
        },
        {
          "ancestorTitles": ["GroupsPage", "Loading States"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Loading States should show data loading state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show data loading state"
        },
        {
          "ancestorTitles": ["GroupsPage", "Edge Cases"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Edge Cases should handle missing slug parameter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing slug parameter"
        },
        {
          "ancestorTitles": ["GroupsPage", "Edge Cases"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Edge Cases should handle empty groups list",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle empty groups list"
        },
        {
          "ancestorTitles": ["GroupsPage", "Edge Cases"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Edge Cases should handle groups fetching errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle groups fetching errors"
        },
        {
          "ancestorTitles": ["GroupsPage", "Edge Cases"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Edge Cases should handle role loading state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle role loading state"
        },
        {
          "ancestorTitles": ["GroupsPage", "Edge Cases"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Edge Cases should not fetch data when user is null",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not fetch data when user is null"
        },
        {
          "ancestorTitles": ["GroupsPage", "Edge Cases"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsPage Edge Cases should handle rapid state changes during data loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle rapid state changes during data loading"
        }
      ],
      "endTime": 1749528570699,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/pages/tenant/GroupsPage.test.tsx",
      "startTime": 1749528570522,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Tenant Creation Flow"],
          "duration": 63,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Tenant Creation Flow should handle successful tenant creation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle successful tenant creation"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Tenant Creation Flow"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Tenant Creation Flow should handle tenant creation errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle tenant creation errors"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Tenant Update Flow"],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Tenant Update Flow should handle successful tenant update",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle successful tenant update"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Tenant Update Flow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Tenant Update Flow should handle tenant update errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle tenant update errors"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Tenant Delete Flow"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Tenant Delete Flow should handle successful tenant deletion",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle successful tenant deletion"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Tenant Delete Flow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Tenant Delete Flow should handle tenant deletion errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle tenant deletion errors"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Tenant Delete Flow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Tenant Delete Flow should call onTenantDeleted callback after successful deletion",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call onTenantDeleted callback after successful deletion"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Tenant Navigation"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Tenant Navigation should navigate to tenant dashboard",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate to tenant dashboard"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Tenant Navigation"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Tenant Navigation should navigate to tenant auth page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate to tenant auth page"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Data Refresh Patterns"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Data Refresh Patterns should refresh tenant list after operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should refresh tenant list after operations"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Error Handling"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Error Handling should handle network errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle network errors gracefully"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Error Handling"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Error Handling should handle authentication errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle authentication errors"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Loading States"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Loading States should show loading state during data fetch",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state during data fetch"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Loading States"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Loading States should show session loading state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show session loading state"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "Empty States"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests Empty States should show empty state when no tenants exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should show empty state when no tenants exist"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "URL Operations"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests URL Operations should display correct auth URL format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should display correct auth URL format"
        },
        {
          "ancestorTitles": ["Tenant Operations Integration Tests", "URL Operations"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Operations Integration Tests URL Operations should have copy functionality available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have copy functionality available"
        }
      ],
      "endTime": 1749528570717,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/Tenants/TenantOperations.test.tsx",
      "startTime": 1749528570473,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["AuthPage (Main)", "Authentication State Management"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Authentication State Management should show loading state when session is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state when session is loading"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "Authentication State Management"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Authentication State Management should redirect to dashboard when user is already logged in",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to dashboard when user is already logged in"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "Authentication State Management"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Authentication State Management should not redirect during loading state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not redirect during loading state"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "Auth Form Display"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Auth Form Display should display welcome title and auth form when not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should display welcome title and auth form when not authenticated"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "Auth Form Display"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Auth Form Display should default to signin tab when no tab parameter is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should default to signin tab when no tab parameter is provided"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "Auth Form Display"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Auth Form Display should use signup tab when tab parameter is set to signup",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use signup tab when tab parameter is set to signup"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "Auth Form Display"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Auth Form Display should default to signin for invalid tab parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should default to signin for invalid tab parameters"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "Authentication Success Handler"],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Authentication Success Handler should navigate to dashboard on successful authentication",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate to dashboard on successful authentication"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "Layout and UI Elements"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Layout and UI Elements should render navbar component",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render navbar component"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "Layout and UI Elements"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Layout and UI Elements should render main content area with proper structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should render main content area with proper structure"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "Layout and UI Elements"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Layout and UI Elements should apply proper styling classes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply proper styling classes"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "Edge Cases and Error Handling"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Edge Cases and Error Handling should handle rapid auth state changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle rapid auth state changes"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "Edge Cases and Error Handling"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Edge Cases and Error Handling should handle missing user with completed loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing user with completed loading"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "Edge Cases and Error Handling"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) Edge Cases and Error Handling should handle session data without throwing errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle session data without throwing errors"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "URL Parameter Handling"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) URL Parameter Handling should properly handle empty search params",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle empty search params"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "URL Parameter Handling"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) URL Parameter Handling should handle multiple URL parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle multiple URL parameters"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "URL Parameter Handling"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) URL Parameter Handling should handle case sensitivity in tab parameter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle case sensitivity in tab parameter"
        },
        {
          "ancestorTitles": ["AuthPage (Main)", "URL Parameter Handling"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Main) URL Parameter Handling should update tab when URL parameters change (simulating navbar navigation)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should update tab when URL parameters change (simulating navbar navigation)"
        }
      ],
      "endTime": 1749528570734,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/pages/AuthPage.test.tsx",
      "startTime": 1749528570573,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ProfilePage", "Regular Profile Page (non-tenant)"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Regular Profile Page (non-tenant) should render profile page when user is authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should render profile page when user is authenticated"
        },
        {
          "ancestorTitles": ["ProfilePage", "Regular Profile Page (non-tenant)"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Regular Profile Page (non-tenant) should redirect to auth when user is not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to auth when user is not authenticated"
        },
        {
          "ancestorTitles": ["ProfilePage", "Regular Profile Page (non-tenant)"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Regular Profile Page (non-tenant) should show loading state while session is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state while session is loading"
        },
        {
          "ancestorTitles": ["ProfilePage", "Regular Profile Page (non-tenant)"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Regular Profile Page (non-tenant) should show error when profile is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show error when profile is not found"
        },
        {
          "ancestorTitles": ["ProfilePage", "Regular Profile Page (non-tenant)"],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Regular Profile Page (non-tenant) should handle profile update",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle profile update"
        },
        {
          "ancestorTitles": ["ProfilePage", "Tenant Profile Page"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Tenant Profile Page should render tenant profile page when user is authenticated and tenant exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should render tenant profile page when user is authenticated and tenant exists"
        },
        {
          "ancestorTitles": ["ProfilePage", "Tenant Profile Page"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Tenant Profile Page should redirect to tenant auth when user is not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to tenant auth when user is not authenticated"
        },
        {
          "ancestorTitles": ["ProfilePage", "Tenant Profile Page"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Tenant Profile Page should show tenant not found when tenant doesn't exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should show tenant not found when tenant doesn't exist"
        },
        {
          "ancestorTitles": ["ProfilePage", "Tenant Profile Page"],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Tenant Profile Page should handle tenant fetch error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle tenant fetch error"
        },
        {
          "ancestorTitles": ["ProfilePage", "Tenant Profile Page"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Tenant Profile Page should show loading state while tenant is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state while tenant is loading"
        },
        {
          "ancestorTitles": ["ProfilePage", "Tenant Profile Page"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Tenant Profile Page should navigate to home when clicking return home button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate to home when clicking return home button"
        },
        {
          "ancestorTitles": ["ProfilePage", "Profile Data Management"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Profile Data Management should use session profile when available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use session profile when available"
        },
        {
          "ancestorTitles": ["ProfilePage", "Profile Data Management"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Profile Data Management should fetch profile data from Supabase when session profile is not available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch profile data from Supabase when session profile is not available"
        },
        {
          "ancestorTitles": ["ProfilePage", "Profile Data Management"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProfilePage Profile Data Management should handle profile fetch error gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle profile fetch error gracefully"
        }
      ],
      "endTime": 1749528570735,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/pages/ProfilePage.test.tsx",
      "startTime": 1749528570596,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ResourcePage", "Rendering"],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Rendering should render with loading state initially",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should render with loading state initially"
        },
        {
          "ancestorTitles": ["ResourcePage", "Rendering"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Rendering should render page title and breadcrumbs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should render page title and breadcrumbs"
        },
        {
          "ancestorTitles": ["ResourcePage", "Rendering"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Rendering should display tenant information when loaded",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should display tenant information when loaded"
        },
        {
          "ancestorTitles": ["ResourcePage", "Rendering"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Rendering should render filter bar and resource list",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should render filter bar and resource list"
        },
        {
          "ancestorTitles": ["ResourcePage", "Rendering"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Rendering should display resources when loaded",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should display resources when loaded"
        },
        {
          "ancestorTitles": ["ResourcePage", "Rendering"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Rendering should display groups in filter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should display groups in filter"
        },
        {
          "ancestorTitles": ["ResourcePage", "User Role and Permissions"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage User Role and Permissions should show create button for owner",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show create button for owner"
        },
        {
          "ancestorTitles": ["ResourcePage", "User Role and Permissions"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage User Role and Permissions should not show create button for member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not show create button for member"
        },
        {
          "ancestorTitles": ["ResourcePage", "User Role and Permissions"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage User Role and Permissions should pass correct manage permissions to ResourceList",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass correct manage permissions to ResourceList"
        },
        {
          "ancestorTitles": ["ResourcePage", "User Role and Permissions"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage User Role and Permissions should not allow management for non-owner",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not allow management for non-owner"
        },
        {
          "ancestorTitles": ["ResourcePage", "Create Resource Dialog"],
          "duration": 41,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Create Resource Dialog should open create dialog when create button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should open create dialog when create button is clicked"
        },
        {
          "ancestorTitles": ["ResourcePage", "Create Resource Dialog"],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Create Resource Dialog should close create dialog",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should close create dialog"
        },
        {
          "ancestorTitles": ["ResourcePage", "Create Resource Dialog"],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Create Resource Dialog should add new resource when created",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should add new resource when created"
        },
        {
          "ancestorTitles": ["ResourcePage", "Resource Filtering"],
          "duration": 28,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Resource Filtering should filter resources by text",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter resources by text"
        },
        {
          "ancestorTitles": ["ResourcePage", "Resource Filtering"],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Resource Filtering should filter resources by group",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter resources by group"
        },
        {
          "ancestorTitles": ["ResourcePage", "Resource Filtering"],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Resource Filtering should reset to all groups",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset to all groups"
        },
        {
          "ancestorTitles": ["ResourcePage", "Resource Management"],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Resource Management should update resource list when resource is updated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should update resource list when resource is updated"
        },
        {
          "ancestorTitles": ["ResourcePage", "Resource Management"],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Resource Management should remove resource from list when deleted",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove resource from list when deleted"
        },
        {
          "ancestorTitles": ["ResourcePage", "Error Handling"],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Error Handling should handle tenant fetch error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle tenant fetch error"
        },
        {
          "ancestorTitles": ["ResourcePage", "Error Handling"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Error Handling should handle resources fetch error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle resources fetch error"
        },
        {
          "ancestorTitles": ["ResourcePage", "Error Handling"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Error Handling should handle groups fetch error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle groups fetch error"
        },
        {
          "ancestorTitles": ["ResourcePage", "Error Handling"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Error Handling should handle resource groups fetch error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle resource groups fetch error"
        },
        {
          "ancestorTitles": ["ResourcePage", "Edge Cases"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Edge Cases should handle missing slug parameter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing slug parameter"
        },
        {
          "ancestorTitles": ["ResourcePage", "Edge Cases"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Edge Cases should handle empty resources list",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle empty resources list"
        },
        {
          "ancestorTitles": ["ResourcePage", "Edge Cases"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Edge Cases should handle empty groups list",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle empty groups list"
        },
        {
          "ancestorTitles": ["ResourcePage", "Edge Cases"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Edge Cases should handle loading role state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle loading role state"
        },
        {
          "ancestorTitles": ["ResourcePage", "Component Integration"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Component Integration should pass correct props to ResourceFilterBar",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass correct props to ResourceFilterBar"
        },
        {
          "ancestorTitles": ["ResourcePage", "Component Integration"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Component Integration should pass correct props to ResourceList",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass correct props to ResourceList"
        },
        {
          "ancestorTitles": ["ResourcePage", "Component Integration"],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Component Integration should pass correct props to CreateResourceDialog",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass correct props to CreateResourceDialog"
        },
        {
          "ancestorTitles": ["ResourcePage", "Filtering Logic"],
          "duration": 46,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Filtering Logic should filter resources by text in name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter resources by text in name"
        },
        {
          "ancestorTitles": ["ResourcePage", "Filtering Logic"],
          "duration": 28,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Filtering Logic should filter resources by text in description",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter resources by text in description"
        },
        {
          "ancestorTitles": ["ResourcePage", "Filtering Logic"],
          "duration": 50,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Filtering Logic should filter resources by text in URL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter resources by text in URL"
        },
        {
          "ancestorTitles": ["ResourcePage", "Filtering Logic"],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Filtering Logic should handle case insensitive text filtering",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle case insensitive text filtering"
        },
        {
          "ancestorTitles": ["ResourcePage", "Filtering Logic"],
          "duration": 28,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ResourcePage Filtering Logic should clear text filter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should clear text filter"
        }
      ],
      "endTime": 1749528570749,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/pages/tenant/ResourcePage.test.tsx",
      "startTime": 1749528569673,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["TenantCard", "Tenant Information Display"],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Tenant Information Display should display tenant information correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "should display tenant information correctly"
        },
        {
          "ancestorTitles": ["TenantCard", "Tenant Information Display"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Tenant Information Display should display created date in correct format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should display created date in correct format"
        },
        {
          "ancestorTitles": ["TenantCard", "Tenant Information Display"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Tenant Information Display should handle missing price tier information",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing price tier information"
        },
        {
          "ancestorTitles": ["TenantCard", "Action Buttons"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Action Buttons should render edit and delete buttons for tenant owners",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should render edit and delete buttons for tenant owners"
        },
        {
          "ancestorTitles": ["TenantCard", "Action Buttons"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Action Buttons should not render edit and delete buttons for non-owner members",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should not render edit and delete buttons for non-owner members"
        },
        {
          "ancestorTitles": ["TenantCard", "Action Buttons"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Action Buttons should not render edit and delete buttons when userRole is null",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should not render edit and delete buttons when userRole is null"
        },
        {
          "ancestorTitles": ["TenantCard", "Action Buttons"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Action Buttons should handle admin role (non-owner) correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle admin role (non-owner) correctly"
        },
        {
          "ancestorTitles": ["TenantCard", "Action Buttons"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Action Buttons should disable delete button when deleting",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should disable delete button when deleting"
        },
        {
          "ancestorTitles": ["TenantCard", "Navigation Functions"],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Navigation Functions should navigate to tenant dashboard when manage button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate to tenant dashboard when manage button is clicked"
        },
        {
          "ancestorTitles": ["TenantCard", "Navigation Functions"],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Navigation Functions should navigate to tenant auth page when login button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate to tenant auth page when login button is clicked"
        },
        {
          "ancestorTitles": ["TenantCard", "URL Copying"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard URL Copying should copy auth URL to clipboard when copy button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should copy auth URL to clipboard when copy button is clicked"
        },
        {
          "ancestorTitles": ["TenantCard", "URL Copying"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard URL Copying should display correct auth URL format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should display correct auth URL format"
        },
        {
          "ancestorTitles": ["TenantCard", "Delete Functionality"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Delete Functionality should call deleteTenant service when delete is confirmed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call deleteTenant service when delete is confirmed"
        },
        {
          "ancestorTitles": ["TenantCard", "Delete Functionality"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Delete Functionality should show error toast when delete fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show error toast when delete fails"
        },
        {
          "ancestorTitles": ["TenantCard", "Delete Functionality"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Delete Functionality should call onTenantDeleted callback after successful delete",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call onTenantDeleted callback after successful delete"
        },
        {
          "ancestorTitles": ["TenantCard", "Update Dialog"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Update Dialog should open update dialog when edit button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should open update dialog when edit button is clicked"
        },
        {
          "ancestorTitles": ["TenantCard", "Accessibility"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Accessibility should have proper ARIA labels and roles",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should have proper ARIA labels and roles"
        },
        {
          "ancestorTitles": ["TenantCard", "Accessibility"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Accessibility should handle keyboard navigation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle keyboard navigation"
        },
        {
          "ancestorTitles": ["TenantCard", "Edge Cases"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Edge Cases should handle zero counts gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle zero counts gracefully"
        },
        {
          "ancestorTitles": ["TenantCard", "Edge Cases"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Edge Cases should handle undefined counts gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle undefined counts gracefully"
        },
        {
          "ancestorTitles": ["TenantCard", "Edge Cases"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantCard Edge Cases should handle very long tenant names",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle very long tenant names"
        }
      ],
      "endTime": 1749528570751,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/components/Tenants/TenantCard.test.tsx",
      "startTime": 1749528570513,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ServiceEventPage"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServiceEventPage should render all main components",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should render all main components"
        },
        {
          "ancestorTitles": ["ServiceEventPage"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServiceEventPage should show create button for tenant owners",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show create button for tenant owners"
        },
        {
          "ancestorTitles": ["ServiceEventPage"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServiceEventPage should not show create button for regular members",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not show create button for regular members"
        },
        {
          "ancestorTitles": ["ServiceEventPage"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServiceEventPage should not show create button when user is not logged in",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not show create button when user is not logged in"
        },
        {
          "ancestorTitles": ["ServiceEventPage"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ServiceEventPage should return null when slug is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null when slug is not provided"
        }
      ],
      "endTime": 1749528570770,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/pages/tenant/ServiceEventPage.test.tsx",
      "startTime": 1749528570704,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Tenant Loading"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Tenant Loading should show loading state while fetching tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state while fetching tenant"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Tenant Loading"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Tenant Loading should display tenant not found error when tenant doesn't exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should display tenant not found error when tenant doesn't exist"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Tenant Loading"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Tenant Loading should handle tenant fetching errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle tenant fetching errors"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Invitation Token Handling"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Invitation Token Handling should extract invite token from URL parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should extract invite token from URL parameters"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Invitation Token Handling"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Invitation Token Handling should handle missing invite token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing invite token"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Invitation Token Handling"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Invitation Token Handling should handle multiple URL parameters including token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle multiple URL parameters including token"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "User Authentication and Access"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) User Authentication and Access should redirect authenticated users with access to tenant dashboard",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect authenticated users with access to tenant dashboard"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "User Authentication and Access"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) User Authentication and Access should not redirect authenticated users without access and no invite token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not redirect authenticated users without access and no invite token"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "User Authentication and Access"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) User Authentication and Access should show auth form for authenticated users without access but with invite token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should show auth form for authenticated users without access but with invite token"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "User Authentication and Access"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) User Authentication and Access should handle authentication check errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle authentication check errors gracefully"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Auth Form Display"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Auth Form Display should display tenant name and auth form when tenant exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should display tenant name and auth form when tenant exists"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Auth Form Display"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Auth Form Display should pass correct props to AuthTabs component",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass correct props to AuthTabs component"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Authentication Success Handler"],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Authentication Success Handler should navigate to tenant dashboard on successful authentication",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate to tenant dashboard on successful authentication"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Error Page Display"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Error Page Display should show error page when tenant is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show error page when tenant is not found"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Error Page Display"],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Error Page Display should allow navigation back to home from error page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow navigation back to home from error page"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Loading States"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Loading States should show session loading state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show session loading state"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Loading States"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Loading States should show tenant loading spinner",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show tenant loading spinner"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Edge Cases"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Edge Cases should handle missing slug parameter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing slug parameter"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Edge Cases"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Edge Cases should handle rapid state changes during loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle rapid state changes during loading"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Edge Cases"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Edge Cases should handle missing user during authentication check",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing user during authentication check"
        },
        {
          "ancestorTitles": ["AuthPage (Tenant)", "Edge Cases"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthPage (Tenant) Edge Cases should handle session loading to user state transition",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle session loading to user state transition"
        }
      ],
      "endTime": 1749528570778,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/pages/tenant/AuthPage.test.tsx",
      "startTime": 1749528570565,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["EventPage", "Rendering"],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Rendering should render correctly when slug is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should render correctly when slug is provided"
        },
        {
          "ancestorTitles": ["EventPage", "Rendering"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Rendering should return null when no slug is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null when no slug is provided"
        },
        {
          "ancestorTitles": ["EventPage", "Rendering"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Rendering should render all main sections",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should render all main sections"
        },
        {
          "ancestorTitles": ["EventPage", "Data Fetching"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Data Fetching should fetch groups and events on mount",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch groups and events on mount"
        },
        {
          "ancestorTitles": ["EventPage", "Data Fetching"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Data Fetching should display fetched groups and events",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should display fetched groups and events"
        },
        {
          "ancestorTitles": ["EventPage", "Data Fetching"],
          "duration": 35,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Data Fetching should refetch events when filters change",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should refetch events when filters change"
        },
        {
          "ancestorTitles": ["EventPage", "Error Handling"],
          "duration": 34,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Error Handling should handle group fetching errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle group fetching errors gracefully"
        },
        {
          "ancestorTitles": ["EventPage", "Error Handling"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Error Handling should handle event fetching errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle event fetching errors gracefully"
        },
        {
          "ancestorTitles": ["EventPage", "Authentication-dependent Features"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Authentication-dependent Features should show action buttons when user is authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show action buttons when user is authenticated"
        },
        {
          "ancestorTitles": ["EventPage", "Authentication-dependent Features"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Authentication-dependent Features should hide action buttons when user is not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should hide action buttons when user is not authenticated"
        },
        {
          "ancestorTitles": ["EventPage", "Event Management"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Event Management should handle event creation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle event creation"
        },
        {
          "ancestorTitles": ["EventPage", "Event Management"],
          "duration": 115,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Event Management should handle event updates",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle event updates"
        },
        {
          "ancestorTitles": ["EventPage", "Event Management"],
          "duration": 39,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Event Management should handle event copying",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle event copying"
        },
        {
          "ancestorTitles": ["EventPage", "Event Management"],
          "duration": 63,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Event Management should close copy dialog when cancelled",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should close copy dialog when cancelled"
        },
        {
          "ancestorTitles": ["EventPage", "Loading States"],
          "duration": 112,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Loading States should show loading state while fetching events",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state while fetching events"
        },
        {
          "ancestorTitles": ["EventPage", "Filter Integration"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Filter Integration should pass correct props to EventFilterBar",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass correct props to EventFilterBar"
        },
        {
          "ancestorTitles": ["EventPage", "Filter Integration"],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Filter Integration should update filters when filter controls are used",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should update filters when filter controls are used"
        },
        {
          "ancestorTitles": ["EventPage", "Accessibility"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Accessibility should have proper structure for screen readers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should have proper structure for screen readers"
        },
        {
          "ancestorTitles": ["EventPage", "Edge Cases"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Edge Cases should handle empty events list",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle empty events list"
        },
        {
          "ancestorTitles": ["EventPage", "Edge Cases"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Edge Cases should handle empty groups list",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle empty groups list"
        },
        {
          "ancestorTitles": ["EventPage", "Edge Cases"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Edge Cases should handle null groups response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle null groups response"
        },
        {
          "ancestorTitles": ["EventPage", "Edge Cases"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Edge Cases should handle undefined filter dates",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle undefined filter dates"
        },
        {
          "ancestorTitles": ["EventPage", "Toast Notifications"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Toast Notifications should show error toast when event fetching fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show error toast when event fetching fails"
        },
        {
          "ancestorTitles": ["EventPage", "Toast Notifications"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "EventPage Toast Notifications should show error toast when group fetching fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show error toast when group fetching fails"
        }
      ],
      "endTime": 1749528570785,
      "message": "",
      "name": "/Users/schwanndenkuo/Documents/personal/chabod/tests/ui/pages/tenant/EventPage.test.tsx",
      "startTime": 1749528569682,
      "status": "passed",
      "summary": ""
    }
  ],
  "wasInterrupted": false
}
